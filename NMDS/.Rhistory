geom_point(data = sage.sc[sage.sc$SamplePeriod == "2006-08" & sage.sc$State == state, ],
aes(color = State), shape = 19, size = 2, color = 'black') +
coord_fixed() +
geom_segment(data = sage.change[sage.change$State == state, ],
aes(x = NMDS1.0608, xend = NMDS1.14, y = NMDS2.0608, yend = NMDS2.14),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
ggtitle("C. Annualized plot shifts")
# Overall ordination
# Format env.vec
sage.vec = envfit(sage.nmds$points, sage[, 9:19], perm = 1000)
sage.fit.vec = as.data.frame(scores(sage.vec, display = 'vectors'))
sage.fit.vec$env = rownames(sage.fit.vec)
sage.fit.vec = cbind(sage.fit.vec, pvals = sage.vec$vectors$pvals)
sage.fit.vec = sage.fit.vec[sage.fit.vec$pvals <= 0.1, ]
sage.fit.vec$env = c("Bare Ground", "Basal Cover", "PG", "C3", "C4", "Shrubs", "ARTR2", "Exotics",
"BRTE")
sage.fit.vec$labs.x = c(0.59, -0.12, -0.61, -0.90,  0.18,  0.65,  0.68, -0.61, -0.19)
sage.fit.vec$labs.y = c(0.05, -0.75, -0.75,  0.17, -0.90,  0.43,  0.25,  0.62,  0.55)
lim = 1.2
nmds.fig = ggplot(sage.sc[sage.sc$SamplePeriod == "2006-08", ],
aes(x = NMDS1, y = NMDS2, color = State)) +
geom_point(shape = 19, size = 3) +
scale_color_manual(values = c("green3", "yellow2", "red3")) +
coord_fixed() +
geom_segment(data = sage.fit.vec, aes(x = 0, xend = MDS1, y = 0, yend = MDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
geom_text(data = sage.fit.vec, aes(x = labs.x, y = labs.y, label = env), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "D. Big Sagebrush NMDS") +
scale_x_continuous(limits = c((min(sage.fit.vec$MDS1) * 1.3), (max(sage.fit.vec$MDS1) * 1.3))) +
scale_y_continuous(limits = c((min(sage.fit.vec$MDS2) * lim), (max(sage.fit.vec$MDS2) * lim))) +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
p = multiplot(bio.fig, grass.fig, ann.fig, nmds.fig, layout = matrix(c(1,2,3,4), nrow=2,
byrow=TRUE))
p
citation("lmerTest")
library("lmer")
library("lme4")
#-- Packages
# Mixed effects models on gaussian, poisson, binomial, etc. distributions
library("lme4") # install.packages("lme4")
# Tools to compare different models in the same table
library("lmerTest") # install.packages("lmerTest")
library("multcomp") # install.packages("mulitcomp")
# Tools for creating figures
library("ggplot2") # install.packages("ggplot2")
library("grid") # install.packages("grid")
library("gridExtra") # install.packages("gridExtra")
# Geoprocessing packages
library("rgdal") # install.packages("maps")
library("rgeos") # install.packages("rgeos")
library("maptools") # install.packages("maptools")
library("ggmap") # install.packages("ggmap")
# Tools for manipulating data
library("plyr") # install.packages("plyr")
library("reshape2") # install.packages("reshape2")
# Package for creating html report
library("knitr") # install.packages("knitr")
# Tools for aesthietic output
library("xtable") # install.packages("xtable")
install.packages("lmerTest")
install.packages("mulitcomp")
install.packages("multcomp")
library("lme4") # install.packages("lme4")
# Tools to compare different models in the same table
library("lmerTest") # install.packages("lmerTest")
library("multcomp") # install.packages("multcomp")
# Tools for creating figures
library("ggplot2") # install.packages("ggplot2")
library("grid") # install.packages("grid")
library("gridExtra") # install.packages("gridExtra")
install.packages("gridExtra")
library("gridExtra") # install.packages("gridExtra")
library("rgdal") # install.packages("rgdal")
install.packages("rgdal")
install.packages("rgeos")
install.packages("maptools")
install.packages("ggmap")
# Tools to compare different models in the same table
library("lmerTest") # install.packages("lmerTest")
library("multcomp") # install.packages("multcomp")
citation("lme4")
citation("lme4")
citation("lmerTest")
citation("multcomp")
citation()
citation("vegan")
#----- Packages -----
library(vegan) # ecological community analysis
library(cluster) # cluster analysis
#----- Additional functions -----
source(file.choose("")) # biostats.R
#----- Data -----
# Cover values of 44 plant species
data(varespec)
# Soil characteristics for each site
data(varechem)
#----- Association Matrices -----
# Bray-Curtis dissimilarity for veg data
sp.bc = vegdist(varespec, method = 'bray')
#----- Nonmetric Multidimensionsl Scaling (NMDS) -----
# Run an NMDS using Bray-Curtis dissimilarity with 2 dimensions on the species data.
sp.nmds = metaMDS(varespec, distance = 'bray', k = 2, autotransform = FALSE, trymax = 100,
zerodist = "add")
sp.nmds
# Very good NMDS. 2 dimensions gave us a stress of 0.100
# You probably won't get the same stress as I reported as NMDS is never the same due to the
# random starts (or something like that, I actually knew at one time).
# Create species scores matrix
sp.sc = scores(sp.nmds)
# Create a goodness of fit vector
gof = goodness(sp.nmds, display = "sites")
# Fit species vectors to NMDS
spec.vec = envfit(sp.nmds, varespec, perm = 10000)
spec.vec
# Fit soil vectors to NMDS
chem.vec = envfit(sp.nmds, varechem, perm = 1000)
chem.vec
#--- Visualize the NMDS
# Examine the ordered observations next the NMDS illustrating 1) the goodness of fit for each
# observation (site) and 2) the location each species plays in the ordination.
# This is a bit messy, but it's a good diagnostic figure.
par(mfrow = c(1, 2))
stressplot(sp.nmds, main = "Stress Plot")
plot(sp.nmds, type = "t", main = paste("Goodness of Fit \n (Strees:", round(sp.nmds$stress, 3), ")"))
points(sp.nmds, display = "sites", cex = gof * 100)
par(mfrow = c(1, 1))
# This plot helps you intrepret the axes. For example, Asis 1 is composed primarily of Ple.sch.
# Axis 2 is composed of Cla.ste, Cla.arb, etc. Axis 2 is also correlated with AL, Fe, Mn, and Humdepth.
# Axis 1 is not strongly correlated with soil variables. You can change the axis probability sensitivity
# by changing the value of 'p.max' in the 'plot()' lines.
p = ordiplot(sp.sc, type = "n", main = paste("NMDS \n (Stress:", round(sp.nmds$stress, 3), ")"),
xlab = "NMDS Axis 1", ylab = "NMDS Axis 2")
text(sp.sc, row.names(sp.sc), pos = 1, offset = 0.25)
plot(spec.vec, p.max = 0.01, col = "blue")
plot(chem.vec, p.max = 0.01, col = 'red')
#--- Add colors from a cluster analysis to the NMDS
# Wards heirarchical cluster analysis using Bray-Curtis dissimilarity identifying 4 groups
sp.clus = hclust(sp.bc, method = 'ward.D', members = NULL)
sp.grps = cutree(sp.clus, k = 4)
grp.lev = levels(factor(sp.grps))
# Plot groups with NMDS
p = ordiplot(sp.sc, type = "n", main = paste("NMDS \n (Stress:", round(sp.nmds$stress, 3), ")"),
xlab = "NMDS Axis 1", ylab = "NMDS Axis 2")
for (i in 1:length(grp.lev))
{
points(sp.sc[sp.grps == i, ], pch = 16, cex = 1.5, col = i + 1)
}
text(sp.sc, row.names(sp.sc), pos = 1, offset = 0.25)
plot(spec.vec, p.max = 0.01, col = "blue")
plot(chem.vec, p.max = 0.01, col = 'red')
legend('bottomright', paste('Group',c(1:length(grp.lev))), pch = 16,
col = 1 + c(1:length(grp.lev)), pt.cex = 2, bty = 'n')
#--- ggplot2 code
# Format fitted vectors
spp.vec = as.data.frame(scores(spec.vec, display = 'vectors'))
# Add a row of spp codes for plotting
spp.vec$spp = rownames(spp.vec)
# Add p-values
spp.vec = cbind(spp.vec, pvals = spec.vec$vectors$pvals)
# Reduce to only significant vectors
spp.vec = spp.vec[spp.vec$pvals <= 0.1, ]
spp.vec
head(sp.sc)
colnames(varespec)
head(vare.spec[1:10])
head(varespec[1:10])
head(sp.grps)
sp.sc = cbind(sp.sc, sp.grps)
head(sp.sc)
dim(sp.sc)
sp.sc = scores(sp.nmds)
sp.sc = cbind(sp.sc, cluster.grps = sp.grps, manual.group = c(rep("A", 12), rep("B", 12)))
head(sp.sc)
# Format fitted vectors
# Species vectors
spp.vec = as.data.frame(scores(spec.vec, display = 'vectors'))
# Add a row of spp codes for plotting
spp.vec$label = rownames(spp.vec)
# Add p-values
spp.vec = cbind(spp.vec, pvals = spec.vec$vectors$pvals)
# Reduce to only significant vectors
spp.vec = spp.vec[spp.vec$pvals <= 0.1, ]
# Soil vectors
soil.vec = as.data.frame(scores(chem.vec, display = 'vectors'))
soil.vec$label = rownames(soil.vec)
soil.vec = cbind(soil.vec, pvals = chem.vec$vectors$pvals)
soil.vec = soil.vec[soil.vec$pvals <= 0.1, ]
sp.sc = scores(sp.nmds)
sp.sc = cbind(sp.sc, sp.grps, manual.grp = c(rep("A", 12), rep("B", 12)))
head(sp.sc)
unique(sp.sc$sp.grps)
unique(sp.sc[, 3])
#--- ggplot2 code
# Create plot scores dataframe
# I created an arbitrary group "manual.group" for demonstration puposes.
sp.sc = cbind(sp.sc, cluster.gprs = sp.grps, manual.grps = c(rep("A", 12), rep("B", 12)))
?pch
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17))
library(ggplot2)
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17))
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.gprs = sp.grps, manual.grps = c(rep("A", 12), rep("B", 12)))
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17))
nmds.fig
head(sp.sc)
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.grps = sp.grps, manual.grps = c(rep("A", 12), rep("B", 12)))
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17))
nmds.fig
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.grps = as.factor(sp.grps), manual.grps = c(rep("A", 12), rep("B", 12)))
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17))
nmds.fig
head(spp.vec)
# Change label locations
spp.vec$labs.x = spp.vec$NMDS1 * 1.1
spp.vec$labs.y = spp.vec$NMDS2 * 1.1
lim = 1.2
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
coord_fixed() +
geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot\nUsing ggplot2") +
scale_x_continuous(limits = c((min(spp.vec$MDS1) * lim), (max(spp.vec$MDS1) * lim))) +
scale_y_continuous(limits = c((min(spp.vec$MDS2) * lim), (max(spp.vec$MDS2) * lim))) +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
library("grid") # plotting
lim = 1.2
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
coord_fixed() +
geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot\nUsing ggplot2") +
scale_x_continuous(limits = c((min(spp.vec$MDS1) * lim), (max(spp.vec$MDS1) * lim))) +
scale_y_continuous(limits = c((min(spp.vec$MDS2) * lim), (max(spp.vec$MDS2) * lim))) +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
#--- ggplot2 code
# Create plot scores dataframe
# I created an arbitrary group "manual.group" for demonstration puposes.
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.grps = as.factor(sp.grps), manual.grps = c(rep("A", 12), rep("B", 12)))
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
coord_fixed() +
geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot\nUsing ggplot2") +
scale_x_continuous(limits = c((min(spp.vec$MDS1) * lim), (max(spp.vec$MDS1) * lim))) +
scale_y_continuous(limits = c((min(spp.vec$MDS2) * lim), (max(spp.vec$MDS2) * lim))) +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
haed(sp.sc)
head(sp.sc)
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17))
nmds.fig
# Format fitted vectors
# Species vectors
spp.vec = as.data.frame(scores(spec.vec, display = 'vectors'))
# Add a row of spp codes for plotting
spp.vec$label = rownames(spp.vec)
# Add p-values
spp.vec = cbind(spp.vec, pvals = spec.vec$vectors$pvals)
# Reduce to only significant vectors
spp.vec = spp.vec[spp.vec$pvals <= 0.1, ]
# Change spp names for plotting (not done on this example)
#spp.vec$env = c()
# Change label locations
spp.vec$labs.x = spp.vec$NMDS1 * 1.1
spp.vec$labs.y = spp.vec$NMDS2 * 1.1
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
coord_fixed() +
geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot\nUsing ggplot2") +
scale_x_continuous(limits = c((min(spp.vec$MDS1) * lim), (max(spp.vec$MDS1) * lim))) +
scale_y_continuous(limits = c((min(spp.vec$MDS2) * lim), (max(spp.vec$MDS2) * lim))) +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
#--- ggplot2 code
# Create plot scores dataframe
# I created an arbitrary group "manual.group" for demonstration puposes.
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.grps = as.factor(sp.grps), manual.grps = c(rep("A", 12), rep("B", 12)))
# Format fitted vectors
# Species vectors
spp.vec = as.data.frame(scores(spec.vec, display = 'vectors'))
# Add a row of spp codes for plotting
spp.vec$label = rownames(spp.vec)
# Add p-values
spp.vec = cbind(spp.vec, pvals = spec.vec$vectors$pvals)
# Reduce to only significant vectors
spp.vec = spp.vec[spp.vec$pvals <= 0.1, ]
# Change spp names for plotting (not done on this example)
#spp.vec$env = c()
# Change label locations
spp.vec$labs.x = spp.vec$NMDS1 * 1.1
spp.vec$labs.y = spp.vec$NMDS2 * 1.1
# Soil vectors
soil.vec = as.data.frame(scores(chem.vec, display = 'vectors'))
soil.vec$label = rownames(soil.vec)
soil.vec = cbind(soil.vec, pvals = chem.vec$vectors$pvals)
soil.vec = soil.vec[soil.vec$pvals <= 0.1, ]
lim = 1.2
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
coord_fixed() +
geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot\nUsing ggplot2") +
scale_x_continuous(limits = c((min(spp.vec$MDS1) * lim), (max(spp.vec$MDS1) * lim))) +
scale_y_continuous(limits = c((min(spp.vec$MDS2) * lim), (max(spp.vec$MDS2) * lim))) +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
coord_fixed()
nmds.fig
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
coord_fixed() +
geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue')
nmds.fig
lim = 1.2
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
#  coord_fixed() +
#  geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
#               arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
#  geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot\nUsing ggplot2") +
scale_x_continuous(limits = c((min(spp.vec$MDS1) * lim), (max(spp.vec$MDS1) * lim))) +
scale_y_continuous(limits = c((min(spp.vec$MDS2) * lim), (max(spp.vec$MDS2) * lim))) +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
scale_shape_manual(values = c(15, 17)) +
#  coord_fixed() +
#  geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
#               arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
#  geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot\nUsing ggplot2") +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
# Mannually assign colors to cluster groups
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
# Manually assign shapes to manual groups
scale_shape_manual(values = c(15, 17)) +
# Plot vectors
coord_fixed() +
geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot\nUsing ggplot2") +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
?varespec
citation("cluster")
source("biostats.R") #
setwd("H:/R/Examples/NMDS")
source("biostats.R") # make sure biostats.R is in the same directory as this script or use file.choose()
library("knitr") # generates reports
kable(sp.grps)
sp.clus = hclust(sp.bc, method = 'ward.D', members = NULL)
sp.grps = cutree(sp.clus, k = 4)
grp.lev = levels(factor(sp.grps))
kable(sp.grps, useNA = 'always')
kable(table(sp.grps, useNA = 'always'))
table(sp.grps, useNA = 'always')
kable(table(sp.grps, useNA = 'always'))
clus.tab = table(sp.grps, useNA = 'always')
kable(clus.tab)
clus.tab
table(sp.grps, useNA = 'always')
sp.nmds$Stress
sp.nmds$stress
table(sp.sc)
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.grps = as.factor(sp.grps), manual.grps = c(rep("A", 12), rep("B", 12)))
head(sp.sc)
kable(table(sp.sc[, c(4, 3)]))
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.grps = as.factor(sp.grps), manual.grps = c(rep("A", 12), rep("B", 12)))
# Format fitted vectors
# Species vectors
spp.vec = as.data.frame(scores(spec.vec, display = 'vectors'))
# Add a row of spp codes for plotting
spp.vec$label = rownames(spp.vec)
# Add p-values
#--- ggplot2 code
# Create plot scores dataframe
# I created an arbitrary group "manual.group" for demonstration puposes.
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.grps = as.factor(sp.grps), manual.grps = c(rep("A", 12), rep("B", 12)))
# Format fitted vectors
# Species vectors
spp.vec = as.data.frame(scores(spec.vec, display = 'vectors'))
# Add a row of spp codes for plotting
spp.vec$label = rownames(spp.vec)
# Add p-values
spp.vec = cbind(spp.vec, pvals = spec.vec$vectors$pvals)
# Reduce to only significant vectors
spp.vec = spp.vec[spp.vec$pvals <= 0.1, ]
# Change spp names for plotting (not done on this example)
#spp.vec$env = c()
# Change label locations
spp.vec$labs.x = spp.vec$NMDS1 * 1.1
spp.vec$labs.y = spp.vec$NMDS2 * 1.1
# Soil vectors
soil.vec = as.data.frame(scores(chem.vec, display = 'vectors'))
soil.vec$label = rownames(soil.vec)
soil.vec = cbind(soil.vec, pvals = chem.vec$vectors$pvals)
soil.vec = soil.vec[soil.vec$pvals <= 0.1, ]
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
# Mannually assign colors to cluster groups
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
# Manually assign shapes to manual groups
scale_shape_manual(values = c(15, 17)) +
# Plot vectors (not working, I don't know why...)
coord_fixed() +
geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot using ggplot2") +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
#--- ggplot2 code
# Create plot scores dataframe
# I created an arbitrary group "manual.group" for demonstration puposes.
sp.sc = scores(sp.nmds)
sp.sc = data.frame(sp.sc, cluster.grps = as.factor(sp.grps), manual.grps = c(rep("A", 12), rep("B", 12)))
# Format fitted vectors
# Species vectors
spp.vec = as.data.frame(scores(spec.vec, display = 'vectors'))
# Add a row of spp codes for plotting
spp.vec$label = rownames(spp.vec)
# Add p-values
spp.vec = cbind(spp.vec, pvals = spec.vec$vectors$pvals)
# Reduce to only significant vectors
spp.vec = spp.vec[spp.vec$pvals <= 0.1, ]
# Change spp names for plotting (not done on this example)
#spp.vec$env = c()
# Change label locations
spp.vec$labs.x = spp.vec$NMDS1 * 1.1
spp.vec$labs.y = spp.vec$NMDS2 * 1.1
# Soil vectors
soil.vec = as.data.frame(scores(chem.vec, display = 'vectors'))
soil.vec$label = rownames(soil.vec)
soil.vec = cbind(soil.vec, pvals = chem.vec$vectors$pvals)
soil.vec = soil.vec[soil.vec$pvals <= 0.1, ]
nmds.fig = ggplot(sp.sc, aes(x = NMDS1, y = NMDS2, color = cluster.grps, shape = manual.grps)) +
geom_point() +
# Mannually assign colors to cluster groups
scale_color_manual(values = c("green3", "yellow2", "red3", "blue")) +
# Manually assign shapes to manual groups
scale_shape_manual(values = c(15, 17)) +
# Plot vectors (not working, I don't know why...)
#  coord_fixed() +
#  geom_segment(data = spp.vec, aes(x = 0, xend = NMDS1, y = 0, yend = NMDS2),
#               arrow = arrow(length = unit(0.25, 'cm')), color = 'blue') +
#  geom_text(data = spp.vec, aes(x = labs.x, y = labs.y, label = label), color = 'blue', size = 4) +
labs(x = "NMDS1", y = "NMDS2", title = "Example NMDS biplot using ggplot2") +
theme_bw() + theme(legend.position = "none", plot.title = element_text(hjust = 0.01))
nmds.fig
